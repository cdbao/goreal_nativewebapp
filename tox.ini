[tox]
envlist = py{310,311,312}, flake8, mypy, black, isort, bandit, docs
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python = 
    3.10: py310
    3.11: py311, flake8, mypy, black, isort, bandit
    3.12: py312

[testenv]
deps = 
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.3.0
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
commands = 
    pytest {posargs:tests} -v \
        --cov=goreal \
        --cov-branch \
        --cov-report=term-missing \
        --cov-report=xml \
        --cov-report=html \
        --cov-fail-under=80
setenv =
    PYTHONPATH = {toxinidir}
    DATABASE_URL = postgresql://goreal_user:goreal_password@localhost:5432/goreal_test_db
    REDIS_URL = redis://localhost:6379/1
    FLASK_ENV = testing
passenv = 
    DATABASE_URL
    REDIS_URL
    CI

[testenv:flake8]
deps = 
    flake8>=6.1.0
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
    flake8-bandit
    flake8-black
    flake8-isort
commands = 
    flake8 goreal tests scripts

[testenv:mypy]
deps = 
    mypy>=1.7.0
    types-requests
    types-redis
    -r{toxinidir}/requirements.txt
commands = 
    mypy goreal --ignore-missing-imports --no-strict-optional

[testenv:black]
deps = 
    black>=23.11.0
commands = 
    black --check --diff goreal tests scripts

[testenv:isort]
deps = 
    isort>=5.12.0
commands = 
    isort --check-only --diff goreal tests scripts

[testenv:bandit]
deps = 
    bandit>=1.7.0
commands = 
    bandit -r goreal -f json -o bandit-report.json
    bandit -r goreal

[testenv:safety]
deps = 
    safety>=2.3.0
commands = 
    safety check --json --output safety-report.json
    safety check

[testenv:docs]
deps = 
    sphinx>=7.2.0
    sphinx-rtd-theme>=1.3.0
    myst-parser>=2.0.0
commands = 
    sphinx-build -W -b html docs docs/_build/html
    sphinx-build -W -b man docs docs/_build/man

[testenv:coverage-report]
deps = 
    coverage[toml]>=7.3.0
skip_install = true
commands = 
    coverage combine
    coverage report
    coverage html
    coverage xml

[testenv:clean]
deps = 
    coverage[toml]
skip_install = true
commands = 
    coverage erase

# Integration test environment
[testenv:integration]
deps = 
    {[testenv]deps}
    docker-compose>=1.29.0
commands = 
    docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d postgres redis
    pytest {posargs:tests/integration} -v --tb=short
    docker-compose -f docker-compose.yml -f docker-compose.dev.yml down -v
setenv =
    {[testenv]setenv}
    INTEGRATION_TESTS = true

# Performance testing
[testenv:performance]
deps = 
    {[testenv]deps}
    pytest-benchmark>=4.0.0
    locust>=2.17.0
commands = 
    pytest {posargs:tests/performance} -v --benchmark-only
setenv = 
    {[testenv]setenv}