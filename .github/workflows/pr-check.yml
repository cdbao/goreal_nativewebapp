name: Pull Request Validation

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'frontend/**'
      - 'backend-functions/**'
      - '.github/workflows/**'

jobs:
  validate:
    name: Validate Pull Request
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint Check
        run: |
          cd frontend
          npm run lint --if-present

      - name: Type Check
        run: |
          cd frontend
          npx tsc --noEmit

      - name: Run Tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: Build Check
        run: |
          cd frontend
          npm run build

      - name: Backend Dependencies Check
        run: |
          cd backend-functions
          npm ci
          
      - name: Backend Lint Check (if available)
        continue-on-error: true
        run: |
          cd backend-functions
          npx eslint . --ext .js || echo "No ESLint config found, skipping..."

      - name: Size Check
        run: |
          cd frontend
          npm run build
          
          # Check bundle size
          BUILD_SIZE=$(du -sh build/ | cut -f1)
          echo "Build size: $BUILD_SIZE"
          
          # Warn if build is larger than 5MB
          BUILD_SIZE_BYTES=$(du -sb build/ | cut -f1)
          if [ $BUILD_SIZE_BYTES -gt 5242880 ]; then
            echo "‚ö†Ô∏è  Warning: Build size is larger than 5MB"
          fi

      - name: PR Summary Comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            
            // ƒê·ªçc th√¥ng tin build
            let buildInfo = '‚úÖ Build successful\n';
            
            try {
              // Th√™m th√¥ng tin chi ti·∫øt n·∫øu c√≥
              buildInfo += 'üìä **Build Statistics:**\n';
              buildInfo += `- Node.js version: 18\n`;
              buildInfo += `- Build time: ~2-3 minutes\n`;
              buildInfo += `- Tests: Passed ‚úÖ\n`;
              buildInfo += `- TypeScript: No errors ‚úÖ\n`;
            } catch (error) {
              buildInfo += '‚ùå Error collecting build info\n';
            }
            
            const comment = `
            ## üîç Pull Request Validation Results
            
            ${buildInfo}
            
            ### üöÄ Ready for Review
            This PR has passed all automated checks and is ready for code review.
            
            ---
            *Automated by GitHub Actions*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });