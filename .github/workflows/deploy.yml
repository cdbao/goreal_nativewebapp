name: Deploy to Firebase

on:
  push:
    branches:
      - main # Kích hoạt khi có commit mới trên nhánh main
  pull_request:
    branches:
      - main # Chạy CI cho pull requests

env:
  NODE_VERSION: '18'
  GCP_REGION: 'us-central1'

jobs:
  # Job 1: Test và Build
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: TypeScript Check
        run: |
          cd frontend
          npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/
          retention-days: 1

  # Job 2: Deploy (chỉ chạy khi push lên main)
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository == 'cdbao/goreal_nativewebapp'
    
    permissions:
      contents: 'read'
      id-token: 'write' # Cần quyền này để xác thực với Google Cloud

    environment:
      name: production
      url: https://goreal-native.web.app

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Authenticate with Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: 'latest'

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/

      # Frontend Deployment
      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy Frontend to Firebase Hosting
        run: |
          cd frontend
          # Tạo firebase.json nếu chưa có
          if [ ! -f firebase.json ]; then
            cat > firebase.json << 'EOF'
          {
            "hosting": {
              "public": "build",
              "ignore": [
                "firebase.json",
                "**/.*",
                "**/node_modules/**"
              ],
              "rewrites": [
                {
                  "source": "**",
                  "destination": "/index.html"
                }
              ]
            }
          }
          EOF
          fi
          
          firebase deploy --only hosting --project ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Deploy Firestore Rules and Indexes
        run: |
          cd frontend
          firebase deploy --only firestore:rules,firestore:indexes --project ${{ secrets.GCP_PROJECT_ID }}

      # Backend Deployment
      - name: Install Backend Dependencies
        run: |
          cd backend-functions
          npm ci

      - name: Deploy Backend to Cloud Functions
        run: |
          cd backend-functions
          
          # Deploy approveSubmission function
          gcloud functions deploy approveSubmission \
            --runtime nodejs18 \
            --trigger-http \
            --allow-unauthenticated \
            --region ${{ env.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --quiet
          
          # Deploy rejectSubmission function  
          gcloud functions deploy rejectSubmission \
            --runtime nodejs18 \
            --trigger-http \
            --allow-unauthenticated \
            --region ${{ env.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --quiet
            
          # Deploy assignDailyQuest function  
          gcloud functions deploy assignDailyQuest \
            --runtime nodejs18 \
            --trigger-http \
            --allow-unauthenticated \
            --region ${{ env.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --quiet
          
          # Deploy health check function
          gcloud functions deploy health \
            --runtime nodejs18 \
            --trigger-http \
            --allow-unauthenticated \
            --region ${{ env.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --quiet

      - name: Post-deployment Health Check
        run: |
          # Kiểm tra frontend
          curl -f https://${{ secrets.GCP_PROJECT_ID }}.web.app || exit 1
          
          # Kiểm tra backend functions
          curl -f https://${{ env.GCP_REGION }}-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net/health || exit 1

      - name: Deploy Notification
        if: success()
        run: |
          echo "🚀 Deployment successful!"
          echo "Frontend: https://${{ secrets.GCP_PROJECT_ID }}.web.app"
          echo "Functions: https://${{ env.GCP_REGION }}-${{ secrets.GCP_PROJECT_ID }}.cloudfunctions.net"

  # Job 3: Security Scan (chạy song song với build)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: |
          cd frontend
          npm ci

      - name: Run Security Audit
        run: |
          cd frontend
          npm audit --audit-level moderate

      - name: Run Dependency Check
        continue-on-error: true
        run: |
          cd frontend
          npx audit-ci --moderate